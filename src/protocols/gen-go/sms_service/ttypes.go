// Autogenerated by Thrift Compiler (0.9.2)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package sms_service

import (
	"bytes"
	"fmt"
	authentication_def "protocols/gen-go/authentication_def"

	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var _ = authentication_def.GoUnusedProtection__
var GoUnusedProtection__ int

type SMSType int64

const (
	SMSType_INVALID_TYPE                 SMSType = 0
	SMSType_GENERAL_SMS                  SMSType = 1
	SMSType_REGISTRATION_SMS_VERIFY_CODE SMSType = 2
)

func (p SMSType) String() string {
	switch p {
	case SMSType_INVALID_TYPE:
		return "SMSType_INVALID_TYPE"
	case SMSType_GENERAL_SMS:
		return "SMSType_GENERAL_SMS"
	case SMSType_REGISTRATION_SMS_VERIFY_CODE:
		return "SMSType_REGISTRATION_SMS_VERIFY_CODE"
	}
	return "<UNSET>"
}

func SMSTypeFromString(s string) (SMSType, error) {
	switch s {
	case "SMSType_INVALID_TYPE":
		return SMSType_INVALID_TYPE, nil
	case "SMSType_GENERAL_SMS":
		return SMSType_GENERAL_SMS, nil
	case "SMSType_REGISTRATION_SMS_VERIFY_CODE":
		return SMSType_REGISTRATION_SMS_VERIFY_CODE, nil
	}
	return SMSType(0), fmt.Errorf("not a valid SMSType string")
}

func SMSTypePtr(v SMSType) *SMSType { return &v }

type PhoneIdentifier struct {
	MCountryCode string `thrift:"m_country_code,1,required" json:"m_country_code"`
	MPhone       string `thrift:"m_phone,2,required" json:"m_phone"`
}

func NewPhoneIdentifier() *PhoneIdentifier {
	return &PhoneIdentifier{
		MCountryCode: "86",
	}
}

func (p *PhoneIdentifier) GetMCountryCode() string {
	return p.MCountryCode
}

func (p *PhoneIdentifier) GetMPhone() string {
	return p.MPhone
}
func (p *PhoneIdentifier) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *PhoneIdentifier) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.MCountryCode = v
	}
	return nil
}

func (p *PhoneIdentifier) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.MPhone = v
	}
	return nil
}

func (p *PhoneIdentifier) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PhoneIdentifier"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *PhoneIdentifier) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_country_code", thrift.STRING, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:m_country_code: %s", p, err)
	}
	if err := oprot.WriteString(string(p.MCountryCode)); err != nil {
		return fmt.Errorf("%T.m_country_code (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:m_country_code: %s", p, err)
	}
	return err
}

func (p *PhoneIdentifier) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_phone", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:m_phone: %s", p, err)
	}
	if err := oprot.WriteString(string(p.MPhone)); err != nil {
		return fmt.Errorf("%T.m_phone (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:m_phone: %s", p, err)
	}
	return err
}

func (p *PhoneIdentifier) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PhoneIdentifier(%+v)", *p)
}

type SMSMessage struct {
	MPhoneIdentifier  *PhoneIdentifier `thrift:"m_phone_identifier,1,required" json:"m_phone_identifier"`
	MText             string           `thrift:"m_text,2,required" json:"m_text"`
	MSmsType          SMSType          `thrift:"m_sms_type,3,required" json:"m_sms_type"`
	MVerificationCode string           `thrift:"m_verification_code,4" json:"m_verification_code"`
}

func NewSMSMessage() *SMSMessage {
	return &SMSMessage{
		MSmsType: 1,
	}
}

var SMSMessage_MPhoneIdentifier_DEFAULT *PhoneIdentifier

func (p *SMSMessage) GetMPhoneIdentifier() *PhoneIdentifier {
	if !p.IsSetMPhoneIdentifier() {
		return SMSMessage_MPhoneIdentifier_DEFAULT
	}
	return p.MPhoneIdentifier
}

func (p *SMSMessage) GetMText() string {
	return p.MText
}

func (p *SMSMessage) GetMSmsType() SMSType {
	return p.MSmsType
}

var SMSMessage_MVerificationCode_DEFAULT string = ""

func (p *SMSMessage) GetMVerificationCode() string {
	return p.MVerificationCode
}
func (p *SMSMessage) IsSetMPhoneIdentifier() bool {
	return p.MPhoneIdentifier != nil
}

func (p *SMSMessage) IsSetMVerificationCode() bool {
	return p.MVerificationCode != SMSMessage_MVerificationCode_DEFAULT
}

func (p *SMSMessage) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *SMSMessage) ReadField1(iprot thrift.TProtocol) error {
	p.MPhoneIdentifier = &PhoneIdentifier{
		MCountryCode: "86",
	}
	if err := p.MPhoneIdentifier.Read(iprot); err != nil {
		return fmt.Errorf("%T error reading struct: %s", p.MPhoneIdentifier, err)
	}
	return nil
}

func (p *SMSMessage) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.MText = v
	}
	return nil
}

func (p *SMSMessage) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		temp := SMSType(v)
		p.MSmsType = temp
	}
	return nil
}

func (p *SMSMessage) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.MVerificationCode = v
	}
	return nil
}

func (p *SMSMessage) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("SMSMessage"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *SMSMessage) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_phone_identifier", thrift.STRUCT, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:m_phone_identifier: %s", p, err)
	}
	if err := p.MPhoneIdentifier.Write(oprot); err != nil {
		return fmt.Errorf("%T error writing struct: %s", p.MPhoneIdentifier, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:m_phone_identifier: %s", p, err)
	}
	return err
}

func (p *SMSMessage) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_text", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:m_text: %s", p, err)
	}
	if err := oprot.WriteString(string(p.MText)); err != nil {
		return fmt.Errorf("%T.m_text (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:m_text: %s", p, err)
	}
	return err
}

func (p *SMSMessage) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_sms_type", thrift.I32, 3); err != nil {
		return fmt.Errorf("%T write field begin error 3:m_sms_type: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.MSmsType)); err != nil {
		return fmt.Errorf("%T.m_sms_type (3) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 3:m_sms_type: %s", p, err)
	}
	return err
}

func (p *SMSMessage) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetMVerificationCode() {
		if err := oprot.WriteFieldBegin("m_verification_code", thrift.STRING, 4); err != nil {
			return fmt.Errorf("%T write field begin error 4:m_verification_code: %s", p, err)
		}
		if err := oprot.WriteString(string(p.MVerificationCode)); err != nil {
			return fmt.Errorf("%T.m_verification_code (4) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 4:m_verification_code: %s", p, err)
		}
	}
	return err
}

func (p *SMSMessage) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SMSMessage(%+v)", *p)
}

type VerificationCodeVerifyRequest struct {
	MPhoneIdentifier  *PhoneIdentifier `thrift:"m_phone_identifier,1,required" json:"m_phone_identifier"`
	MVerificationCode string           `thrift:"m_verification_code,2,required" json:"m_verification_code"`
}

func NewVerificationCodeVerifyRequest() *VerificationCodeVerifyRequest {
	return &VerificationCodeVerifyRequest{}
}

var VerificationCodeVerifyRequest_MPhoneIdentifier_DEFAULT *PhoneIdentifier

func (p *VerificationCodeVerifyRequest) GetMPhoneIdentifier() *PhoneIdentifier {
	if !p.IsSetMPhoneIdentifier() {
		return VerificationCodeVerifyRequest_MPhoneIdentifier_DEFAULT
	}
	return p.MPhoneIdentifier
}

func (p *VerificationCodeVerifyRequest) GetMVerificationCode() string {
	return p.MVerificationCode
}
func (p *VerificationCodeVerifyRequest) IsSetMPhoneIdentifier() bool {
	return p.MPhoneIdentifier != nil
}

func (p *VerificationCodeVerifyRequest) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *VerificationCodeVerifyRequest) ReadField1(iprot thrift.TProtocol) error {
	p.MPhoneIdentifier = &PhoneIdentifier{
		MCountryCode: "86",
	}
	if err := p.MPhoneIdentifier.Read(iprot); err != nil {
		return fmt.Errorf("%T error reading struct: %s", p.MPhoneIdentifier, err)
	}
	return nil
}

func (p *VerificationCodeVerifyRequest) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.MVerificationCode = v
	}
	return nil
}

func (p *VerificationCodeVerifyRequest) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("VerificationCodeVerifyRequest"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *VerificationCodeVerifyRequest) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_phone_identifier", thrift.STRUCT, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:m_phone_identifier: %s", p, err)
	}
	if err := p.MPhoneIdentifier.Write(oprot); err != nil {
		return fmt.Errorf("%T error writing struct: %s", p.MPhoneIdentifier, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:m_phone_identifier: %s", p, err)
	}
	return err
}

func (p *VerificationCodeVerifyRequest) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_verification_code", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:m_verification_code: %s", p, err)
	}
	if err := oprot.WriteString(string(p.MVerificationCode)); err != nil {
		return fmt.Errorf("%T.m_verification_code (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:m_verification_code: %s", p, err)
	}
	return err
}

func (p *VerificationCodeVerifyRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("VerificationCodeVerifyRequest(%+v)", *p)
}

type VerificationCodeGenerateRequest struct {
	MPhoneIdentifier *PhoneIdentifier `thrift:"m_phone_identifier,1,required" json:"m_phone_identifier"`
}

func NewVerificationCodeGenerateRequest() *VerificationCodeGenerateRequest {
	return &VerificationCodeGenerateRequest{}
}

var VerificationCodeGenerateRequest_MPhoneIdentifier_DEFAULT *PhoneIdentifier

func (p *VerificationCodeGenerateRequest) GetMPhoneIdentifier() *PhoneIdentifier {
	if !p.IsSetMPhoneIdentifier() {
		return VerificationCodeGenerateRequest_MPhoneIdentifier_DEFAULT
	}
	return p.MPhoneIdentifier
}
func (p *VerificationCodeGenerateRequest) IsSetMPhoneIdentifier() bool {
	return p.MPhoneIdentifier != nil
}

func (p *VerificationCodeGenerateRequest) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *VerificationCodeGenerateRequest) ReadField1(iprot thrift.TProtocol) error {
	p.MPhoneIdentifier = &PhoneIdentifier{
		MCountryCode: "86",
	}
	if err := p.MPhoneIdentifier.Read(iprot); err != nil {
		return fmt.Errorf("%T error reading struct: %s", p.MPhoneIdentifier, err)
	}
	return nil
}

func (p *VerificationCodeGenerateRequest) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("VerificationCodeGenerateRequest"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *VerificationCodeGenerateRequest) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_phone_identifier", thrift.STRUCT, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:m_phone_identifier: %s", p, err)
	}
	if err := p.MPhoneIdentifier.Write(oprot); err != nil {
		return fmt.Errorf("%T error writing struct: %s", p.MPhoneIdentifier, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:m_phone_identifier: %s", p, err)
	}
	return err
}

func (p *VerificationCodeGenerateRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("VerificationCodeGenerateRequest(%+v)", *p)
}

type VerificationCodeGenerateReturn struct {
	MSmsVerificationCode string                   `thrift:"m_sms_verification_code,1,required" json:"m_sms_verification_code"`
	MErrno               authentication_def.Errno `thrift:"m_errno,2,required" json:"m_errno"`
}

func NewVerificationCodeGenerateReturn() *VerificationCodeGenerateReturn {
	return &VerificationCodeGenerateReturn{
		MErrno: 0,
	}
}

func (p *VerificationCodeGenerateReturn) GetMSmsVerificationCode() string {
	return p.MSmsVerificationCode
}

func (p *VerificationCodeGenerateReturn) GetMErrno() authentication_def.Errno {
	return p.MErrno
}
func (p *VerificationCodeGenerateReturn) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *VerificationCodeGenerateReturn) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.MSmsVerificationCode = v
	}
	return nil
}

func (p *VerificationCodeGenerateReturn) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		temp := authentication_def.Errno(v)
		p.MErrno = temp
	}
	return nil
}

func (p *VerificationCodeGenerateReturn) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("VerificationCodeGenerateReturn"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *VerificationCodeGenerateReturn) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_sms_verification_code", thrift.STRING, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:m_sms_verification_code: %s", p, err)
	}
	if err := oprot.WriteString(string(p.MSmsVerificationCode)); err != nil {
		return fmt.Errorf("%T.m_sms_verification_code (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:m_sms_verification_code: %s", p, err)
	}
	return err
}

func (p *VerificationCodeGenerateReturn) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("m_errno", thrift.I32, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:m_errno: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.MErrno)); err != nil {
		return fmt.Errorf("%T.m_errno (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:m_errno: %s", p, err)
	}
	return err
}

func (p *VerificationCodeGenerateReturn) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("VerificationCodeGenerateReturn(%+v)", *p)
}
